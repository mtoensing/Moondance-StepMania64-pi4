[Global]
#Noteskin this noteskin falls back on
#We normaly make this fallback on common
#Because its the global noteskin every default fallsback on to
FallbackNoteSkin=common

[NoteDisplay]
#Noteskin Animation Lengths
AnimationIsBeatBased=1

##Tap Parts
TapNoteAnimationLength=4
TapMineAnimationLength=4
TapLiftAnimationLength=4
TapFakeAnimationLength=4
##Hold Parts
HoldHeadAnimationLength=4
HoldTopCapAnimationLength=4
HoldBottomCapAnimationLength=4
HoldBodyAnimationLength=4
HoldTailAnimationLength=4
##Roll Parts
RollHeadAnimationLength=4
RollTopCapAnimationLength=4
RollBottomCapAnimationLength=4
RollBodyAnimationLength=4
RollTailAnimationLength=4


#Define if noteskin is Vivid or not
#Value 1 = true, Value 0 = false

##Tap Parts
TapNoteAnimationIsVivid=0
TapMineAnimationIsVivid=0
TapFakeAnimationIsVivid=0
TapLiftAnimationIsVivid=0
##Hold Parts
HoldHeadAnimationIsVivid=0
HoldTopCapAnimationIsVivid=0
HoldBodyAnimationIsVivid=0
HoldBottomCapAnimationIsVivid=0
HoldTailAnimationIsVivid=0
##Roll Parts
RollHeadAnimationIsVivid=0
RollTopCapAnimationIsVivid=0
RollBodyAnimationIsVivid=0
RollBottomCapAnimationIsVivid=0
RollTailAnimationIsVivid=0


#Texture Coord Offest Info

#This is the TextureCoordOffset which we use for Rhythm colored noteskins
#If you dont want to use it, just keep the value 0
#Rhythm colored noteskins are noteskins that have different colors for every
#4th, 8th, 12th, 16th and so on
#To use this you need to use simple math because it isnt based on the size of 
#the image but its based on the total value of the size which is 1
#So if you got 9 frames (including  192nd)
#You need to run this simple math
# 1 / 9 = 0.11111111111111111111111111 (and so on)
#Because using the entire value is to long, lets make it smaler to 6 digits
#You can make it longer if you want but lets keep it nice to 6 digits

##Tap Parts
TapNoteAdditionTextureCoordOffsetX=0
TapNoteAdditionTextureCoordOffsetY=0
TapNoteNoteColorTextureCoordSpacingX=0.125
TapNoteNoteColorTextureCoordSpacingY=0
TapMineAdditionTextureCoordOffsetX=0
TapMineAdditionTextureCoordOffsetY=0
TapMineNoteColorTextureCoordSpacingX=0
TapMineNoteColorTextureCoordSpacingY=0
TapLiftAdditionTextureCoordOffsetX=0
TapLiftAdditionTextureCoordOffsetY=0
TapLiftNoteColorTextureCoordSpacingX=0
TapLiftNoteColorTextureCoordSpacingY=0
TapFakeAdditionTextureCoordOffsetX=0
TapFakeAdditionTextureCoordOffsetY=0
TapFakeNoteColorTextureCoordSpacingX=0.125
TapFakeNoteColorTextureCoordSpacingY=0

##Hold Parts
HoldHeadAdditionTextureCoordOffsetX=0
HoldHeadAdditionTextureCoordOffsetY=0
HoldHeadNoteColorTextureCoordSpacingX=0.125
HoldHeadNoteColorTextureCoordSpacingY=0

#Other Stuff
DrawHoldHeadForTapsOnSameRow=1
DrawRollHeadForTapsOnSameRow=1
TapHoldRollOnRowMeansHold=1
StartDrawingHoldBodyOffsetFromHead=0
StopDrawingHoldBodyOffsetFromTail=0
HoldLetGoGrayPercent=1
UseLighting=0
ReverseDrawOrder=1101
HoldHeadIsAboveWavyParts=1
HoldTailIsAboveWavyParts=1
HoldActiveIsAddLayer=0


#Edit this incase you want to make noteskin for reverse or both
FlipHoldBodyWhenReverse=1
FlipHeadAndTailWhenReverse=1
TopHoldAnchorWhenReverse=1


#Diffuse Info v2

#Diffuse uses a color code to define the diffuse
#You can use diffusealpha to make noteskins disapear with value = 0 or reapear with value = 1
#The way it works is pretty easy
#It is based on the Red,Blue,Green,Alpha value that you get with color
#But instead of 255,255,255,255 it uses 1,1,1,1
#So if you want to use a RBG value from an image like for example Taupe
#Which has a value of 72,60,50 , What we just do is / 254 on every value
#And we also add a Alpha (for transparent) value between 0.1 and 1
#So We get 0.283464,0.236220,0.196850,0.6
#You can go over the 6 digits after the . (which I don't do because I like to keep it clean and not to big)
#diffuse,1,1,1,1 is the basic code
#Change them to which value you want
#add ; at the end of your command incase you add more commands

[GhostArrowDim]
NoneCommand=
HitMineCommand=visible,false
AvoidMineCommand=
MissCommand=
#Boo explosion
W5Command=diffuse,0.8,0.0,0.6,1;zoom,1;diffusealpha,.9;linear,0.1;zoom,2;diffusealpha,.3;linear,0.06;diffusealpha,0
#Good explosion
W4Command=diffuse,0.3,0.8,1.0,1;zoom,1;diffusealpha,.9;linear,0.1;zoom,2;diffusealpha,.3;linear,0.06;diffusealpha,0
#Great explosion
W3Command=diffuse,0.0,1.0,0.4,1;zoom,1;diffusealpha,.9;linear,0.1;zoom,2;diffusealpha,.3;linear,0.06;diffusealpha,0
#Perfect explosion
W2Command=diffuse,1.0,1.0,0.3,1;zoom,1;diffusealpha,.9;linear,0.1;zoom,2;diffusealpha,.3;linear,0.06;diffusealpha,0
#Marvelous explosion
W1Command=diffuse,1.0,1.0,1.0,1;zoom,1;diffusealpha,.9;linear,0.1;zoom,2;diffusealpha,.3;linear,0.06;diffusealpha,0
#Hold end commands
LetGoCommand=
HeldCommand=diffuse,1.0,1.0,1.0,1;zoom,1;linear,0.06;zoom,1.1;linear,0.06;diffusealpha,0

[GhostArrowBright]
NoneCommand=
HitMineCommand=visible,false
AvoidMineCommand=
MissCommand=
#Boo explosion
W5Command=diffuse,0.8,0.0,0.6,1;zoom,1;diffusealpha,.9;linear,0.1;zoom,2;diffusealpha,.3;linear,0.06;diffusealpha,0
#Good explosion
W4Command=diffuse,0.3,0.8,1.0,1;zoom,1;diffusealpha,.9;linear,0.1;zoom,2;diffusealpha,.3;linear,0.06;diffusealpha,0
#Great explosion
W3Command=diffuse,0.0,1.0,0.4,1;zoom,1;diffusealpha,.9;linear,0.1;zoom,2;diffusealpha,.3;linear,0.06;diffusealpha,0
#Perfect explosion
W2Command=diffuse,1.0,1.0,0.3,1;zoom,1;diffusealpha,.9;linear,0.1;zoom,2;diffusealpha,.3;linear,0.06;diffusealpha,0
#Marvelous explosion
W1Command=diffuse,1.0,1.0,1.0,1;zoom,1;diffusealpha,.9;linear,0.1;zoom,2;diffusealpha,.3;linear,0.06;diffusealpha,0
#Hold end commands
LetGoCommand=
HeldCommand=diffuse,1.0,1.0,1.0,1;zoom,1;linear,0.06;zoom,1.1;linear,0.06;diffusealpha,0

[ReceptorArrow]
#For InitCommand take a look at "Down Receptor.lua"
#InitCommand=
NoneCommand=stoptweening;zoom,0.75;linear,0.11;zoom,1
PressCommand=
LiftCommand=
AvoidMineCommand=
#The way the receptor responds when you hit an arrow on specified judgment
#Boo command
W5Command=stoptweening
#Good command
W4Command=stoptweening
#Great command
W3Command=stoptweening
#Perfect command
W2Command=stoptweening
#Marvelous command
W1Command=stoptweening

[HoldGhostArrow]
#The way the hold arrow reacts
HoldingOnCommand=visible,true
HoldingOffCommand=visible,false
RollOnCommand=visible,true
RollOffCommand=visible,false

[Press]
ReverseOnCommand=vertalign,bottom
ReverseOffCommand=vertalign,top
PressCommand=visible,true
LiftCommand=visible,false